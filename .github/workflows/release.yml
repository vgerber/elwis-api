name: Build and Push Docker Image with Semantic Release

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from release
        run: |
          VERSION=$(jq -r .release.tag_name "$GITHUB_EVENT_PATH")
          echo "VERSION=${VERSION#v}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/elwis-server:${{ env.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/elwis-server:latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  generate-typescript-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from release
        run: |
          VERSION=$(jq -r .release.tag_name "$GITHUB_EVENT_PATH")
          echo "VERSION=${VERSION#v}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install uv
          uv pip install --system .

      - name: Start FastAPI server
        run: |
          export DB_TYPE=sqlite
          fastapi run app/main.py --port 8000 &
          sleep 10

      - name: Download OpenAPI schema
        run: |
          curl http://127.0.0.1:8000/openapi.json -o openapi.json

      - name: Generate TypeScript client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript-fetch
          openapi-file: openapi.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org/"

      - name: Publish to npm
        run: |
          cp clients/typescript/package.json typescript-fetch-client/package.json
          cp clients/typescript/tsconfig.json typescript-fetch-client/tsconfig.json
          cd typescript-fetch-client
          npm install
          npm run build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
